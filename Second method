
//主函数；
package com.imooc.test;

import java.io.IOException;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.SAXException;

import com.imooc.handler.SAXParserHandler;

public class SAXTest {

	public static void main(String[] args) {
		//创建一个SAXParserFactory的实例；
		SAXParserFactory factory=SAXParserFactory.newInstance();
		//创建一个SAXParser的实例；
		try {
			SAXParser parser=factory.newSAXParser();
			//创建SAXParserHandler对象；
			
			SAXParserHandler handler=new SAXParserHandler();
			parser.parse("books.xml", handler);
		} catch (ParserConfigurationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}

//重新定义的用到的类
package com.imooc.handler;

import javax.xml.stream.events.StartElement;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

public class SAXParserHandler extends DefaultHandler {
	int bookIndex=0;
	 //用来标志解析开始；
    @Override
    public void startDocument() throws SAXException {
    	// TODO Auto-generated method stub
    	super.startDocument();
    	System.out.println("SAX解析开始");
    }
    //用来标志解析结束；
    @Override
    public void endDocument() throws SAXException {
    	// TODO Auto-generated method stub
    	super.endDocument();
    	System.out.println("SAX解析结束");
}
  //用来遍历xml的开始标签；
    @Override
    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
    	// TODO Auto-generated method stub
    	//调用父类DefaultHandler的startElement方法；
    	super.startElement(uri, localName, qName, attributes);
    	if(qName.equals("book")){
//    		//知道关于book的属性情况
//    		String value=attributes.getValue("id");
//    		System.out.println("book的属性值是："+value);
    		bookIndex++;
			System.out.println("==========下面开始遍历第"+bookIndex+"一本书的内容=========");
    		int num=attributes.getLength();
    		for(int i=0;i<num;i++){
    			System.out.print("book元素的第"+(i+1)+"个属性名是"+attributes.getQName(i));
    			System.out.println("-----属性值是："+attributes.getValue(i));

    		}
        }
    	else if(!qName.equals("book") && !qName.equals("bookstore")){
    	    System.out.print("节点名是："+qName);
    	}
    }
    //用来遍历xml的结束标签；
    @Override
    public void endElement(String uri, String localName, String qName) throws SAXException {
    	// TODO Auto-generated method stub
    	super.endElement(uri, localName, qName);
    	if(qName.equals("book")){
			System.out.println("==========结束遍历第"+bookIndex+"书的内容=========");

    	}
    }
    @Override
    public void characters(char[] ch, int start, int length) throws SAXException {
    	// TODO Auto-generated method stub
    	super.characters(ch, start, length);
    	String value=new String(ch, start, length);
    	if(!value.trim().equals("")){
        	System.out.println("------节点值是："+value);

    	}
    }
}

